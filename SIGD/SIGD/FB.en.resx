<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="button12.Text" xml:space="preserve">
    <value>Football</value>
  </data>
  <data name="button9.Text" xml:space="preserve">
    <value>Handball</value>
  </data>
  <data name="button2.Text" xml:space="preserve">
    <value>Main
Menu</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label48.Size" type="System.Drawing.Size, System.Drawing">
    <value>43, 15</value>
  </data>
  <data name="label48.Text" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="label17.Size" type="System.Drawing.Size, System.Drawing">
    <value>43, 15</value>
  </data>
  <data name="label17.Text" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="label47.Size" type="System.Drawing.Size, System.Drawing">
    <value>43, 15</value>
  </data>
  <data name="label47.Text" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="label24.Size" type="System.Drawing.Size, System.Drawing">
    <value>43, 15</value>
  </data>
  <data name="label24.Text" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="label45.Size" type="System.Drawing.Size, System.Drawing">
    <value>43, 15</value>
  </data>
  <data name="label45.Text" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="label13.Size" type="System.Drawing.Size, System.Drawing">
    <value>43, 15</value>
  </data>
  <data name="label13.Text" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="label44.Size" type="System.Drawing.Size, System.Drawing">
    <value>43, 15</value>
  </data>
  <data name="label44.Text" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="label43.Size" type="System.Drawing.Size, System.Drawing">
    <value>43, 15</value>
  </data>
  <data name="label43.Text" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="label16.Size" type="System.Drawing.Size, System.Drawing">
    <value>43, 15</value>
  </data>
  <data name="label16.Text" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="label22.Size" type="System.Drawing.Size, System.Drawing">
    <value>43, 15</value>
  </data>
  <data name="label22.Text" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="label41.Size" type="System.Drawing.Size, System.Drawing">
    <value>43, 15</value>
  </data>
  <data name="label41.Text" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="label12.Size" type="System.Drawing.Size, System.Drawing">
    <value>43, 15</value>
  </data>
  <data name="label12.Text" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="label37.Size" type="System.Drawing.Size, System.Drawing">
    <value>43, 15</value>
  </data>
  <data name="label37.Text" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="label5.Size" type="System.Drawing.Size, System.Drawing">
    <value>43, 15</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="label4.Size" type="System.Drawing.Size, System.Drawing">
    <value>235, 29</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Fixtures Basketball</value>
  </data>
  <data name="label29.Size" type="System.Drawing.Size, System.Drawing">
    <value>43, 15</value>
  </data>
  <data name="label29.Text" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="label3.Size" type="System.Drawing.Size, System.Drawing">
    <value>43, 15</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>